@model ProductViewModel


@{
    var popularClass = Model.Products.Count > 2 ? "popular" : "";
    var products = Model.Products;
    var categories = Model.Categories;
}

@section Scripts{
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js" integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.min.js" integrity="sha384-VHvPCCyXqtD5DqJeNxl2dtTyhF78xXNXdkwX1CZeRusQfRKp+tA7hAShOK/B/fQ2" crossorigin="anonymous"></script>
}

@*@section MessageBox{
<div class="alert alert-success text-center m-0">
    You Have Message!
</div>
}*@
@section Categories{
@*@await Component.InvokeAsync("Categories")*@
<div class="list-group">
    @foreach (var category in categories)
    {
    <a href="~/Product/Category/@category.Id" class="list-group-item list-group-item-action">@category.Name</a>
    }
</div>
}


@if(TempData["AlertMessage"] != null){
    <div class="alert alert-success">
        <strong> Başarılı!</strong> @TempData["AlertMessage"]

    </div>

}

@if (products.Count == 0)
{
    @await Html.PartialAsync("_noproduct")
}
else
{
    <div class="row">
        @foreach (var product in products)
        {
            @if (product.IsOfferable == true)
            {
                <div class="col-md-3 d-flex align-items-stretch">
                    @await Html.PartialAsync("_product",product)
                </div>
            }
        }
    </div>
}

